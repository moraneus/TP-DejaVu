package tests.test69_prediction

import dejavu.Verify
import org.junit.Test
import tests.util.testcase.TestCase

class Test69 extends TestCase {
  val TEST: String = PATH_TO_TESTS + "/test69_prediction"
  val resultfile = s"$TEST/dejavu-results"
  val spec1 = s"$TEST/spec1.qtl"
  val log1 = s"$TEST/log1.csv"

  @Test def test1_1(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--bits", "10", "--prediction", "3", "--prediction_type", "smart")
    // *=0 for success, *=1 for failure
    val expected = List[String](
      "r(51)=1;r(511)=1;r(5111)=1",
      "r(51)=1;r(511)=1;q(5111)=1",
      "r(51)=1;r(511)=1;r(511)=1",
      "r(51)=1;r(511)=1;q(511)=1",
      "r(51)=1;r(511)=1;r(1)=1",
      "r(51)=1;r(511)=1;q(1)=1",
      "r(51)=1;r(511)=1;r(4)=1",
      "r(51)=1;r(511)=1;q(4)=1",
      "r(51)=1;r(511)=1;r(51)=1",
      "r(51)=1;r(511)=1;q(51)=1",
      "r(51)=1;q(511)=1;r(5111)=1",
      "r(51)=1;q(511)=1;q(5111)=1",
      "r(51)=1;q(511)=1;r(511)=1",
      "r(51)=1;q(511)=1;q(511)=1",
      "r(51)=1;q(511)=1;r(1)=1",
      "r(51)=1;q(511)=1;q(1)=1",
      "r(51)=1;q(511)=1;r(4)=1",
      "r(51)=1;q(511)=1;q(4)=1",
      "r(51)=1;q(511)=1;r(51)=1",
      "r(51)=1;q(511)=1;q(51)=1",
      "r(51)=1;r(1)=1;r(511)=1",
      "r(51)=1;r(1)=1;q(511)=1",
      "r(51)=1;r(1)=1;r(2)=1",
      "r(51)=1;r(1)=1;q(2)=1",
      "r(51)=1;r(1)=1;r(4)=1",
      "r(51)=1;r(1)=1;q(4)=1",
      "r(51)=1;r(1)=1;r(1)=1",
      "r(51)=1;r(1)=1;q(1)=1",
      "r(51)=1;r(1)=1;r(51)=1",
      "r(51)=1;r(1)=1;q(51)=1",
      "r(51)=1;q(1)=1;r(511)=1",
      "r(51)=1;q(1)=1;q(511)=1",
      "r(51)=1;q(1)=1;r(2)=1",
      "r(51)=1;q(1)=1;q(2)=1",
      "r(51)=1;q(1)=1;r(4)=1",
      "r(51)=1;q(1)=1;q(4)=1",
      "r(51)=1;q(1)=1;r(1)=1",
      "r(51)=1;q(1)=1;q(1)=1",
      "r(51)=1;q(1)=1;r(51)=1",
      "r(51)=1;q(1)=1;q(51)=1",
      "r(51)=1;r(4)=1;r(511)=1",
      "r(51)=1;r(4)=1;q(511)=1",
      "r(51)=1;r(4)=1;r(1)=1",
      "r(51)=1;r(4)=1;q(1)=1",
      "r(51)=1;r(4)=1;r(5)=0",
      "r(51)=1;r(4)=1;q(5)=1",
      "r(51)=1;r(4)=1;r(51)=1",
      "r(51)=1;r(4)=1;q(51)=1",
      "r(51)=1;r(4)=1;r(4)=1",
      "r(51)=1;r(4)=1;q(4)=1",
      "r(51)=1;q(4)=1;r(511)=1",
      "r(51)=1;q(4)=1;q(511)=1",
      "r(51)=1;q(4)=1;r(1)=1",
      "r(51)=1;q(4)=1;q(1)=1",
      "r(51)=1;q(4)=1;r(5)=1",
      "r(51)=1;q(4)=1;q(5)=1",
      "r(51)=1;q(4)=1;r(51)=1",
      "r(51)=1;q(4)=1;q(51)=1",
      "r(51)=1;q(4)=1;r(4)=1",
      "r(51)=1;q(4)=1;q(4)=1",
      "r(51)=1;r(51)=1;r(511)=1",
      "r(51)=1;r(51)=1;q(511)=1",
      "r(51)=1;r(51)=1;r(1)=1",
      "r(51)=1;r(51)=1;q(1)=1",
      "r(51)=1;r(51)=1;r(4)=1",
      "r(51)=1;r(51)=1;q(4)=1",
      "r(51)=1;r(51)=1;r(51)=1",
      "r(51)=1;r(51)=1;q(51)=1",
      "r(51)=1;q(51)=1;r(511)=1",
      "r(51)=1;q(51)=1;q(511)=1",
      "r(51)=1;q(51)=1;r(1)=1",
      "r(51)=1;q(51)=1;q(1)=1",
      "r(51)=1;q(51)=1;r(4)=1",
      "r(51)=1;q(51)=1;q(4)=1",
      "r(51)=1;q(51)=1;r(51)=1",
      "r(51)=1;q(51)=1;q(51)=1",
      "q(51)=1;r(511)=1;r(5111)=1",
      "q(51)=1;r(511)=1;q(5111)=1",
      "q(51)=1;r(511)=1;r(511)=1",
      "q(51)=1;r(511)=1;q(511)=1",
      "q(51)=1;r(511)=1;r(1)=1",
      "q(51)=1;r(511)=1;q(1)=1",
      "q(51)=1;r(511)=1;r(51)=1",
      "q(51)=1;r(511)=1;q(51)=1",
      "q(51)=1;q(511)=1;r(5111)=1",
      "q(51)=1;q(511)=1;q(5111)=1",
      "q(51)=1;q(511)=1;r(511)=1",
      "q(51)=1;q(511)=1;q(511)=1",
      "q(51)=1;q(511)=1;r(1)=1",
      "q(51)=1;q(511)=1;q(1)=1",
      "q(51)=1;q(511)=1;r(51)=1",
      "q(51)=1;q(511)=1;q(51)=1",
      "q(51)=1;r(1)=1;r(511)=1",
      "q(51)=1;r(1)=1;q(511)=1",
      "q(51)=1;r(1)=1;r(2)=1",
      "q(51)=1;r(1)=1;q(2)=1",
      "q(51)=1;r(1)=1;r(51)=1",
      "q(51)=1;r(1)=1;q(51)=1",
      "q(51)=1;r(1)=1;r(1)=1",
      "q(51)=1;r(1)=1;q(1)=1",
      "q(51)=1;q(1)=1;r(511)=1",
      "q(51)=1;q(1)=1;q(511)=1",
      "q(51)=1;q(1)=1;r(2)=1",
      "q(51)=1;q(1)=1;q(2)=1",
      "q(51)=1;q(1)=1;r(51)=1",
      "q(51)=1;q(1)=1;q(51)=1",
      "q(51)=1;q(1)=1;r(1)=1",
      "q(51)=1;q(1)=1;q(1)=1",
      "q(51)=1;r(4)=1;r(511)=1",
      "q(51)=1;r(4)=1;q(511)=1",
      "q(51)=1;r(4)=1;r(1)=1",
      "q(51)=1;r(4)=1;q(1)=1",
      "q(51)=1;r(4)=1;r(51)=1",
      "q(51)=1;r(4)=1;q(51)=1",
      "q(51)=1;r(4)=1;r(4)=1",
      "q(51)=1;r(4)=1;q(4)=1",
      "q(51)=1;q(4)=1;r(511)=1",
      "q(51)=1;q(4)=1;q(511)=1",
      "q(51)=1;q(4)=1;r(1)=1",
      "q(51)=1;q(4)=1;q(1)=1",
      "q(51)=1;q(4)=1;r(51)=1",
      "q(51)=1;q(4)=1;q(51)=1",
      "q(51)=1;q(4)=1;r(4)=1",
      "q(51)=1;q(4)=1;q(4)=1",
      "q(51)=1;r(51)=1;r(511)=1",
      "q(51)=1;r(51)=1;q(511)=1",
      "q(51)=1;r(51)=1;r(1)=1",
      "q(51)=1;r(51)=1;q(1)=1",
      "q(51)=1;r(51)=1;r(4)=1",
      "q(51)=1;r(51)=1;q(4)=1",
      "q(51)=1;r(51)=1;r(51)=1",
      "q(51)=1;r(51)=1;q(51)=1",
      "q(51)=1;q(51)=1;r(511)=1",
      "q(51)=1;q(51)=1;q(511)=1",
      "q(51)=1;q(51)=1;r(1)=1",
      "q(51)=1;q(51)=1;q(1)=1",
      "q(51)=1;q(51)=1;r(4)=1",
      "q(51)=1;q(51)=1;q(4)=1",
      "q(51)=1;q(51)=1;r(51)=1",
      "q(51)=1;q(51)=1;q(51)=1",
      "r(3)=1;r(51)=1;r(511)=1",
      "r(3)=1;r(51)=1;q(511)=1",
      "r(3)=1;r(51)=1;r(1)=1",
      "r(3)=1;r(51)=1;q(1)=1",
      "r(3)=1;r(51)=1;r(4)=1",
      "r(3)=1;r(51)=1;q(4)=1",
      "r(3)=1;r(51)=1;r(51)=1",
      "r(3)=1;r(51)=1;q(51)=1",
      "r(3)=1;q(51)=1;r(511)=1",
      "r(3)=1;q(51)=1;q(511)=1",
      "r(3)=1;q(51)=1;r(1)=1",
      "r(3)=1;q(51)=1;q(1)=1",
      "r(3)=1;q(51)=1;r(4)=1",
      "r(3)=1;q(51)=1;q(4)=1",
      "r(3)=1;q(51)=1;r(51)=1",
      "r(3)=1;q(51)=1;q(51)=1",
      "r(3)=1;r(3)=1;r(51)=1",
      "r(3)=1;r(3)=1;q(51)=1",
      "r(3)=1;r(3)=1;r(3)=1",
      "r(3)=1;r(3)=1;q(3)=1",
      "r(3)=1;r(3)=1;r(4)=1",
      "r(3)=1;r(3)=1;q(4)=1",
      "r(3)=1;r(3)=1;r(1)=1",
      "r(3)=1;r(3)=1;q(1)=1",
      "r(3)=1;q(3)=1;r(51)=1",
      "r(3)=1;q(3)=1;q(51)=1",
      "r(3)=1;q(3)=1;r(3)=1",
      "r(3)=1;q(3)=1;q(3)=1",
      "r(3)=1;q(3)=1;r(4)=1",
      "r(3)=1;q(3)=1;q(4)=1",
      "r(3)=1;q(3)=1;r(1)=1",
      "r(3)=1;q(3)=1;q(1)=1",
      "r(3)=1;r(4)=1;r(51)=1",
      "r(3)=1;r(4)=1;q(51)=1",
      "r(3)=1;r(4)=1;r(1)=1",
      "r(3)=1;r(4)=1;q(1)=1",
      "r(3)=1;r(4)=1;r(5)=0",
      "r(3)=1;r(4)=1;q(5)=1",
      "r(3)=1;r(4)=1;r(4)=1",
      "r(3)=1;r(4)=1;q(4)=1",
      "r(3)=1;q(4)=1;r(51)=1",
      "r(3)=1;q(4)=1;q(51)=1",
      "r(3)=1;q(4)=1;r(1)=1",
      "r(3)=1;q(4)=1;q(1)=1",
      "r(3)=1;q(4)=1;r(5)=1",
      "r(3)=1;q(4)=1;q(5)=1",
      "r(3)=1;q(4)=1;r(4)=1",
      "r(3)=1;q(4)=1;q(4)=1",
      "r(3)=1;r(1)=1;r(51)=1",
      "r(3)=1;r(1)=1;q(51)=1",
      "r(3)=1;r(1)=1;r(2)=1",
      "r(3)=1;r(1)=1;q(2)=1",
      "r(3)=1;r(1)=1;r(4)=1",
      "r(3)=1;r(1)=1;q(4)=1",
      "r(3)=1;r(1)=1;r(1)=1",
      "r(3)=1;r(1)=1;q(1)=1",
      "r(3)=1;q(1)=1;r(51)=1",
      "r(3)=1;q(1)=1;q(51)=1",
      "r(3)=1;q(1)=1;r(2)=1",
      "r(3)=1;q(1)=1;q(2)=1",
      "r(3)=1;q(1)=1;r(4)=1",
      "r(3)=1;q(1)=1;q(4)=1",
      "r(3)=1;q(1)=1;r(1)=1",
      "r(3)=1;q(1)=1;q(1)=1",
      "q(3)=1;r(51)=1;r(511)=1",
      "q(3)=1;r(51)=1;q(511)=1",
      "q(3)=1;r(51)=1;r(1)=1",
      "q(3)=1;r(51)=1;q(1)=1",
      "q(3)=1;r(51)=1;r(4)=1",
      "q(3)=1;r(51)=1;q(4)=1",
      "q(3)=1;r(51)=1;r(51)=1",
      "q(3)=1;r(51)=1;q(51)=1",
      "q(3)=1;q(51)=1;r(511)=1",
      "q(3)=1;q(51)=1;q(511)=1",
      "q(3)=1;q(51)=1;r(1)=1",
      "q(3)=1;q(51)=1;q(1)=1",
      "q(3)=1;q(51)=1;r(4)=1",
      "q(3)=1;q(51)=1;q(4)=1",
      "q(3)=1;q(51)=1;r(51)=1",
      "q(3)=1;q(51)=1;q(51)=1",
      "q(3)=1;r(3)=1;r(51)=1",
      "q(3)=1;r(3)=1;q(51)=1",
      "q(3)=1;r(3)=1;r(3)=1",
      "q(3)=1;r(3)=1;q(3)=1",
      "q(3)=1;r(3)=1;r(4)=1",
      "q(3)=1;r(3)=1;q(4)=1",
      "q(3)=1;r(3)=1;r(1)=1",
      "q(3)=1;r(3)=1;q(1)=1",
      "q(3)=1;q(3)=1;r(51)=1",
      "q(3)=1;q(3)=1;q(51)=1",
      "q(3)=1;q(3)=1;r(3)=1",
      "q(3)=1;q(3)=1;q(3)=1",
      "q(3)=1;q(3)=1;r(4)=1",
      "q(3)=1;q(3)=1;q(4)=1",
      "q(3)=1;q(3)=1;r(1)=1",
      "q(3)=1;q(3)=1;q(1)=1",
      "q(3)=1;r(4)=1;r(51)=1",
      "q(3)=1;r(4)=1;q(51)=1",
      "q(3)=1;r(4)=1;r(1)=1",
      "q(3)=1;r(4)=1;q(1)=1",
      "q(3)=1;r(4)=1;r(5)=0",
      "q(3)=1;r(4)=1;q(5)=1",
      "q(3)=1;r(4)=1;r(4)=1",
      "q(3)=1;r(4)=1;q(4)=1",
      "q(3)=1;q(4)=1;r(51)=1",
      "q(3)=1;q(4)=1;q(51)=1",
      "q(3)=1;q(4)=1;r(1)=1",
      "q(3)=1;q(4)=1;q(1)=1",
      "q(3)=1;q(4)=1;r(5)=1",
      "q(3)=1;q(4)=1;q(5)=1",
      "q(3)=1;q(4)=1;r(4)=1",
      "q(3)=1;q(4)=1;q(4)=1",
      "q(3)=1;r(1)=1;r(51)=1",
      "q(3)=1;r(1)=1;q(51)=1",
      "q(3)=1;r(1)=1;r(2)=1",
      "q(3)=1;r(1)=1;q(2)=1",
      "q(3)=1;r(1)=1;r(4)=1",
      "q(3)=1;r(1)=1;q(4)=1",
      "q(3)=1;r(1)=1;r(1)=1",
      "q(3)=1;r(1)=1;q(1)=1",
      "q(3)=1;q(1)=1;r(51)=1",
      "q(3)=1;q(1)=1;q(51)=1",
      "q(3)=1;q(1)=1;r(2)=1",
      "q(3)=1;q(1)=1;q(2)=1",
      "q(3)=1;q(1)=1;r(4)=1",
      "q(3)=1;q(1)=1;q(4)=1",
      "q(3)=1;q(1)=1;r(1)=1",
      "q(3)=1;q(1)=1;q(1)=1",
      "r(4)=1;r(51)=1;r(511)=1",
      "r(4)=1;r(51)=1;q(511)=1",
      "r(4)=1;r(51)=1;r(4)=1",
      "r(4)=1;r(51)=1;q(4)=1",
      "r(4)=1;r(51)=1;r(5)=0",
      "r(4)=1;r(51)=1;q(5)=1",
      "r(4)=1;r(51)=1;r(51)=1",
      "r(4)=1;r(51)=1;q(51)=1",
      "r(4)=1;q(51)=1;r(511)=1",
      "r(4)=1;q(51)=1;q(511)=1",
      "r(4)=1;q(51)=1;r(4)=1",
      "r(4)=1;q(51)=1;q(4)=1",
      "r(4)=1;q(51)=1;r(5)=1",
      "r(4)=1;q(51)=1;q(5)=1",
      "r(4)=1;q(51)=1;r(51)=1",
      "r(4)=1;q(51)=1;q(51)=1",
      "r(4)=1;r(1)=1;r(51)=1",
      "r(4)=1;r(1)=1;q(51)=1",
      "r(4)=1;r(1)=1;r(4)=1",
      "r(4)=1;r(1)=1;q(4)=1",
      "r(4)=1;r(1)=1;r(5)=0",
      "r(4)=1;r(1)=1;q(5)=1",
      "r(4)=1;r(1)=1;r(1)=1",
      "r(4)=1;r(1)=1;q(1)=1",
      "r(4)=1;q(1)=1;r(51)=1",
      "r(4)=1;q(1)=1;q(51)=1",
      "r(4)=1;q(1)=1;r(4)=1",
      "r(4)=1;q(1)=1;q(4)=1",
      "r(4)=1;q(1)=1;r(5)=0",
      "r(4)=1;q(1)=1;q(5)=1",
      "r(4)=1;q(1)=1;r(1)=1",
      "r(4)=1;q(1)=1;q(1)=1",
      "r(4)=1;r(5)=0;r(51)=0",
      "r(4)=1;r(5)=0;q(51)=1",
      "r(4)=1;r(5)=0;r(4)=0",
      "r(4)=1;r(5)=0;q(4)=0",
      "r(4)=1;r(5)=0;r(5)=0",
      "r(4)=1;r(5)=0;q(5)=0",
      "r(4)=1;q(5)=1;r(51)=1",
      "r(4)=1;q(5)=1;q(51)=1",
      "r(4)=1;q(5)=1;r(4)=1",
      "r(4)=1;q(5)=1;q(4)=1",
      "r(4)=1;q(5)=1;r(5)=0",
      "r(4)=1;q(5)=1;q(5)=1",
      "r(4)=1;r(4)=1;r(51)=1",
      "r(4)=1;r(4)=1;q(51)=1",
      "r(4)=1;r(4)=1;r(1)=1",
      "r(4)=1;r(4)=1;q(1)=1",
      "r(4)=1;r(4)=1;r(5)=0",
      "r(4)=1;r(4)=1;q(5)=1",
      "r(4)=1;r(4)=1;r(4)=1",
      "r(4)=1;r(4)=1;q(4)=1",
      "r(4)=1;q(4)=1;r(51)=1",
      "r(4)=1;q(4)=1;q(51)=1",
      "r(4)=1;q(4)=1;r(1)=1",
      "r(4)=1;q(4)=1;q(1)=1",
      "r(4)=1;q(4)=1;r(5)=0",
      "r(4)=1;q(4)=1;q(5)=1",
      "r(4)=1;q(4)=1;r(4)=1",
      "r(4)=1;q(4)=1;q(4)=1",
      "q(4)=1;r(51)=1;r(511)=1",
      "q(4)=1;r(51)=1;q(511)=1",
      "q(4)=1;r(51)=1;r(1)=1",
      "q(4)=1;r(51)=1;q(1)=1",
      "q(4)=1;r(51)=1;r(4)=1",
      "q(4)=1;r(51)=1;q(4)=1",
      "q(4)=1;r(51)=1;r(51)=1",
      "q(4)=1;r(51)=1;q(51)=1",
      "q(4)=1;q(51)=1;r(511)=1",
      "q(4)=1;q(51)=1;q(511)=1",
      "q(4)=1;q(51)=1;r(1)=1",
      "q(4)=1;q(51)=1;q(1)=1",
      "q(4)=1;q(51)=1;r(4)=1",
      "q(4)=1;q(51)=1;q(4)=1",
      "q(4)=1;q(51)=1;r(51)=1",
      "q(4)=1;q(51)=1;q(51)=1",
      "q(4)=1;r(1)=1;r(51)=1",
      "q(4)=1;r(1)=1;q(51)=1",
      "q(4)=1;r(1)=1;r(2)=1",
      "q(4)=1;r(1)=1;q(2)=1",
      "q(4)=1;r(1)=1;r(4)=1",
      "q(4)=1;r(1)=1;q(4)=1",
      "q(4)=1;r(1)=1;r(1)=1",
      "q(4)=1;r(1)=1;q(1)=1",
      "q(4)=1;q(1)=1;r(51)=1",
      "q(4)=1;q(1)=1;q(51)=1",
      "q(4)=1;q(1)=1;r(2)=1",
      "q(4)=1;q(1)=1;q(2)=1",
      "q(4)=1;q(1)=1;r(4)=1",
      "q(4)=1;q(1)=1;q(4)=1",
      "q(4)=1;q(1)=1;r(1)=1",
      "q(4)=1;q(1)=1;q(1)=1",
      "q(4)=1;r(5)=1;r(51)=1",
      "q(4)=1;r(5)=1;q(51)=1",
      "q(4)=1;r(5)=1;r(1)=1",
      "q(4)=1;r(5)=1;q(1)=1",
      "q(4)=1;r(5)=1;r(5)=1",
      "q(4)=1;r(5)=1;q(5)=1",
      "q(4)=1;r(5)=1;r(4)=0",
      "q(4)=1;r(5)=1;q(4)=1",
      "q(4)=1;q(5)=1;r(51)=1",
      "q(4)=1;q(5)=1;q(51)=1",
      "q(4)=1;q(5)=1;r(1)=1",
      "q(4)=1;q(5)=1;q(1)=1",
      "q(4)=1;q(5)=1;r(5)=1",
      "q(4)=1;q(5)=1;q(5)=1",
      "q(4)=1;q(5)=1;r(4)=1",
      "q(4)=1;q(5)=1;q(4)=1",
      "q(4)=1;r(4)=1;r(51)=1",
      "q(4)=1;r(4)=1;q(51)=1",
      "q(4)=1;r(4)=1;r(1)=1",
      "q(4)=1;r(4)=1;q(1)=1",
      "q(4)=1;r(4)=1;r(5)=0",
      "q(4)=1;r(4)=1;q(5)=1",
      "q(4)=1;r(4)=1;r(4)=1",
      "q(4)=1;r(4)=1;q(4)=1",
      "q(4)=1;q(4)=1;r(51)=1",
      "q(4)=1;q(4)=1;q(51)=1",
      "q(4)=1;q(4)=1;r(1)=1",
      "q(4)=1;q(4)=1;q(1)=1",
      "q(4)=1;q(4)=1;r(5)=1",
      "q(4)=1;q(4)=1;q(5)=1",
      "q(4)=1;q(4)=1;r(4)=1",
      "q(4)=1;q(4)=1;q(4)=1",
      "r(1)=1;r(51)=1;r(511)=1",
      "r(1)=1;r(51)=1;q(511)=1",
      "r(1)=1;r(51)=1;r(1)=1",
      "r(1)=1;r(51)=1;q(1)=1",
      "r(1)=1;r(51)=1;r(4)=1",
      "r(1)=1;r(51)=1;q(4)=1",
      "r(1)=1;r(51)=1;r(51)=1",
      "r(1)=1;r(51)=1;q(51)=1",
      "r(1)=1;q(51)=1;r(511)=1",
      "r(1)=1;q(51)=1;q(511)=1",
      "r(1)=1;q(51)=1;r(1)=1",
      "r(1)=1;q(51)=1;q(1)=1",
      "r(1)=1;q(51)=1;r(4)=1",
      "r(1)=1;q(51)=1;q(4)=1",
      "r(1)=1;q(51)=1;r(51)=1",
      "r(1)=1;q(51)=1;q(51)=1",
      "r(1)=1;r(2)=1;r(51)=1",
      "r(1)=1;r(2)=1;q(51)=1",
      "r(1)=1;r(2)=1;r(1)=1",
      "r(1)=1;r(2)=1;q(1)=1",
      "r(1)=1;r(2)=1;r(4)=1",
      "r(1)=1;r(2)=1;q(4)=1",
      "r(1)=1;r(2)=1;r(2)=1",
      "r(1)=1;r(2)=1;q(2)=1",
      "r(1)=1;q(2)=1;r(51)=1",
      "r(1)=1;q(2)=1;q(51)=1",
      "r(1)=1;q(2)=1;r(1)=1",
      "r(1)=1;q(2)=1;q(1)=1",
      "r(1)=1;q(2)=1;r(4)=1",
      "r(1)=1;q(2)=1;q(4)=1",
      "r(1)=1;q(2)=1;r(2)=1",
      "r(1)=1;q(2)=1;q(2)=1",
      "r(1)=1;r(4)=1;r(51)=1",
      "r(1)=1;r(4)=1;q(51)=1",
      "r(1)=1;r(4)=1;r(1)=1",
      "r(1)=1;r(4)=1;q(1)=1",
      "r(1)=1;r(4)=1;r(5)=0",
      "r(1)=1;r(4)=1;q(5)=1",
      "r(1)=1;r(4)=1;r(4)=1",
      "r(1)=1;r(4)=1;q(4)=1",
      "r(1)=1;q(4)=1;r(51)=1",
      "r(1)=1;q(4)=1;q(51)=1",
      "r(1)=1;q(4)=1;r(1)=1",
      "r(1)=1;q(4)=1;q(1)=1",
      "r(1)=1;q(4)=1;r(5)=1",
      "r(1)=1;q(4)=1;q(5)=1",
      "r(1)=1;q(4)=1;r(4)=1",
      "r(1)=1;q(4)=1;q(4)=1",
      "r(1)=1;r(1)=1;r(51)=1",
      "r(1)=1;r(1)=1;q(51)=1",
      "r(1)=1;r(1)=1;r(2)=1",
      "r(1)=1;r(1)=1;q(2)=1",
      "r(1)=1;r(1)=1;r(4)=1",
      "r(1)=1;r(1)=1;q(4)=1",
      "r(1)=1;r(1)=1;r(1)=1",
      "r(1)=1;r(1)=1;q(1)=1",
      "r(1)=1;q(1)=1;r(51)=1",
      "r(1)=1;q(1)=1;q(51)=1",
      "r(1)=1;q(1)=1;r(2)=1",
      "r(1)=1;q(1)=1;q(2)=1",
      "r(1)=1;q(1)=1;r(4)=1",
      "r(1)=1;q(1)=1;q(4)=1",
      "r(1)=1;q(1)=1;r(1)=1",
      "r(1)=1;q(1)=1;q(1)=1",
      "q(1)=1;r(51)=1;r(511)=1",
      "q(1)=1;r(51)=1;q(511)=1",
      "q(1)=1;r(51)=1;r(1)=1",
      "q(1)=1;r(51)=1;q(1)=1",
      "q(1)=1;r(51)=1;r(4)=1",
      "q(1)=1;r(51)=1;q(4)=1",
      "q(1)=1;r(51)=1;r(51)=1",
      "q(1)=1;r(51)=1;q(51)=1",
      "q(1)=1;q(51)=1;r(511)=1",
      "q(1)=1;q(51)=1;q(511)=1",
      "q(1)=1;q(51)=1;r(1)=1",
      "q(1)=1;q(51)=1;q(1)=1",
      "q(1)=1;q(51)=1;r(4)=1",
      "q(1)=1;q(51)=1;q(4)=1",
      "q(1)=1;q(51)=1;r(51)=1",
      "q(1)=1;q(51)=1;q(51)=1",
      "q(1)=1;r(2)=1;r(51)=1",
      "q(1)=1;r(2)=1;q(51)=1",
      "q(1)=1;r(2)=1;r(1)=1",
      "q(1)=1;r(2)=1;q(1)=1",
      "q(1)=1;r(2)=1;r(4)=1",
      "q(1)=1;r(2)=1;q(4)=1",
      "q(1)=1;r(2)=1;r(2)=1",
      "q(1)=1;r(2)=1;q(2)=1",
      "q(1)=1;q(2)=1;r(51)=1",
      "q(1)=1;q(2)=1;q(51)=1",
      "q(1)=1;q(2)=1;r(1)=1",
      "q(1)=1;q(2)=1;q(1)=1",
      "q(1)=1;q(2)=1;r(4)=1",
      "q(1)=1;q(2)=1;q(4)=1",
      "q(1)=1;q(2)=1;r(2)=1",
      "q(1)=1;q(2)=1;q(2)=1",
      "q(1)=1;r(4)=1;r(51)=1",
      "q(1)=1;r(4)=1;q(51)=1",
      "q(1)=1;r(4)=1;r(1)=1",
      "q(1)=1;r(4)=1;q(1)=1",
      "q(1)=1;r(4)=1;r(5)=0",
      "q(1)=1;r(4)=1;q(5)=1",
      "q(1)=1;r(4)=1;r(4)=1",
      "q(1)=1;r(4)=1;q(4)=1",
      "q(1)=1;q(4)=1;r(51)=1",
      "q(1)=1;q(4)=1;q(51)=1",
      "q(1)=1;q(4)=1;r(1)=1",
      "q(1)=1;q(4)=1;q(1)=1",
      "q(1)=1;q(4)=1;r(5)=1",
      "q(1)=1;q(4)=1;q(5)=1",
      "q(1)=1;q(4)=1;r(4)=1",
      "q(1)=1;q(4)=1;q(4)=1",
      "q(1)=1;r(1)=1;r(51)=1",
      "q(1)=1;r(1)=1;q(51)=1",
      "q(1)=1;r(1)=1;r(2)=1",
      "q(1)=1;r(1)=1;q(2)=1",
      "q(1)=1;r(1)=1;r(4)=1",
      "q(1)=1;r(1)=1;q(4)=1",
      "q(1)=1;r(1)=1;r(1)=1",
      "q(1)=1;r(1)=1;q(1)=1",
      "q(1)=1;q(1)=1;r(51)=1",
      "q(1)=1;q(1)=1;q(51)=1",
      "q(1)=1;q(1)=1;r(2)=1",
      "q(1)=1;q(1)=1;q(2)=1",
      "q(1)=1;q(1)=1;r(4)=1",
      "q(1)=1;q(1)=1;q(4)=1",
      "q(1)=1;q(1)=1;r(1)=1",
      "q(1)=1;q(1)=1;q(1)=1"
    )
    checkResults(resultfile, expected:_*)
  }


  @Test def test1_2(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--bits", "5", "--prediction", "4", "--expected_verdict", "0")
    // *=0 for success, *=1 for failure
    val expected = List[String](
      "r(51)=1;r(511)=1;r(5111)=1;r(51111)=1",
      "r(51)=1;r(511)=1;r(5111)=1;q(51111)=1",
      "r(51)=1;r(511)=1;r(5111)=1;r(51)=1",
      "r(51)=1;r(511)=1;r(5111)=1;q(51)=1",
      "r(51)=1;r(511)=1;r(5111)=1;r(1)=1",
      "r(51)=1;r(511)=1;r(5111)=1;q(1)=1",
      "r(51)=1;r(511)=1;r(5111)=1;r(4)=1",
      "r(51)=1;r(511)=1;r(5111)=1;q(4)=1",
      "r(51)=1;r(511)=1;r(5111)=1;r(5111)=1",
      "r(51)=1;r(511)=1;r(5111)=1;q(5111)=1",
      "r(51)=1;r(511)=1;q(5111)=1;r(51111)=1",
      "r(51)=1;r(511)=1;q(5111)=1;q(51111)=1",
      "r(51)=1;r(511)=1;q(5111)=1;r(51)=1",
      "r(51)=1;r(511)=1;q(5111)=1;q(51)=1",
      "r(51)=1;r(511)=1;q(5111)=1;r(1)=1",
      "r(51)=1;r(511)=1;q(5111)=1;q(1)=1",
      "r(51)=1;r(511)=1;q(5111)=1;r(4)=1",
      "r(51)=1;r(511)=1;q(5111)=1;q(4)=1",
      "r(51)=1;r(511)=1;q(5111)=1;r(5111)=1",
      "r(51)=1;r(511)=1;q(5111)=1;q(5111)=1",
      "r(51)=1;r(511)=1;r(511)=1;r(5111)=1",
      "r(51)=1;r(511)=1;r(511)=1;q(5111)=1",
      "r(51)=1;r(511)=1;r(511)=1;r(511)=1",
      "r(51)=1;r(511)=1;r(511)=1;q(511)=1",
      "r(51)=1;r(511)=1;r(511)=1;r(1)=1",
      "r(51)=1;r(511)=1;r(511)=1;q(1)=1",
      "r(51)=1;r(511)=1;r(511)=1;r(4)=1",
      "r(51)=1;r(511)=1;r(511)=1;q(4)=1",
      "r(51)=1;r(511)=1;r(511)=1;r(51)=1",
      "r(51)=1;r(511)=1;r(511)=1;q(51)=1",
      "r(51)=1;r(511)=1;q(511)=1;r(5111)=1",
      "r(51)=1;r(511)=1;q(511)=1;q(5111)=1",
      "r(51)=1;r(511)=1;q(511)=1;r(511)=1",
      "r(51)=1;r(511)=1;q(511)=1;q(511)=1",
      "r(51)=1;r(511)=1;q(511)=1;r(1)=1",
      "r(51)=1;r(511)=1;q(511)=1;q(1)=1",
      "r(51)=1;r(511)=1;q(511)=1;r(4)=1",
      "r(51)=1;r(511)=1;q(511)=1;q(4)=1",
      "r(51)=1;r(511)=1;q(511)=1;r(51)=1",
      "r(51)=1;r(511)=1;q(511)=1;q(51)=1",
      "r(51)=1;r(511)=1;r(1)=1;r(5111)=1",
      "r(51)=1;r(511)=1;r(1)=1;q(5111)=1",
      "r(51)=1;r(511)=1;r(1)=1;r(51)=1",
      "r(51)=1;r(511)=1;r(1)=1;q(51)=1",
      "r(51)=1;r(511)=1;r(1)=1;r(2)=1",
      "r(51)=1;r(511)=1;r(1)=1;q(2)=1",
      "r(51)=1;r(511)=1;r(1)=1;r(4)=1",
      "r(51)=1;r(511)=1;r(1)=1;q(4)=1",
      "r(51)=1;r(511)=1;r(1)=1;r(1)=1",
      "r(51)=1;r(511)=1;r(1)=1;q(1)=1",
      "r(51)=1;r(511)=1;q(1)=1;r(5111)=1",
      "r(51)=1;r(511)=1;q(1)=1;q(5111)=1",
      "r(51)=1;r(511)=1;q(1)=1;r(51)=1",
      "r(51)=1;r(511)=1;q(1)=1;q(51)=1",
      "r(51)=1;r(511)=1;q(1)=1;r(2)=1",
      "r(51)=1;r(511)=1;q(1)=1;q(2)=1",
      "r(51)=1;r(511)=1;q(1)=1;r(4)=1",
      "r(51)=1;r(511)=1;q(1)=1;q(4)=1",
      "r(51)=1;r(511)=1;q(1)=1;r(1)=1",
      "r(51)=1;r(511)=1;q(1)=1;q(1)=1",
      "r(51)=1;r(511)=1;r(4)=1;r(5111)=1",
      "r(51)=1;r(511)=1;r(4)=1;q(5111)=1",
      "r(51)=1;r(511)=1;r(4)=1;r(51)=1",
      "r(51)=1;r(511)=1;r(4)=1;q(51)=1",
      "r(51)=1;r(511)=1;r(4)=1;r(1)=1",
      "r(51)=1;r(511)=1;r(4)=1;q(1)=1",
      "r(51)=1;r(511)=1;r(4)=1;r(5)=0"
    )
    checkResults(resultfile, expected: _*)
  }
}

