package tests.test58_prediction

import dejavu.Verify
import org.junit.Test
import tests.util.testcase.TestCase

class Test58 extends TestCase {
  val TEST: String = PATH_TO_TESTS + "/test58_prediction"
  val resultfile = s"$TEST/dejavu-results"
  val spec1 = s"$TEST/spec1.qtl"
  val log1 = s"$TEST/log1.csv"
  val log2 = s"$TEST/log2.csv"

  @Test def test1_1(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--prediction", "2")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "q(21)=0;q(211)=0",
      "q(21)=0;q(21)=0",
      "q(21)=0;q(1)=0",
      "q(1)=0;q(21)=0",
      "q(1)=0;q(1)=0",
      "q(1)=0;q(2)=0",
      "q(2)=0;q(21)=0",
      "q(2)=0;q(1)=0",
      "q(2)=0;q(2)=0"
    )
    checkResults(resultfile, expected:_*)
  }

  @Test def test1_2(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log2, "--resultfile", resultfile, "--prediction", "2")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "3",
      "q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0",
      "q(6)=0;q(6)=0",
      "q(6)=0;q(61)=0",
      "q(61)=0;q(2)=0",
      "q(61)=0;q(61)=0",
      "q(61)=0;q(611)=0")
    checkResults(resultfile, expected:_*)
  }

  @Test def test1_3(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--prediction", "4")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "q(21)=0;q(211)=0;q(2111)=0;q(21111)=0",
      "q(21)=0;q(211)=0;q(2111)=0;q(21)=0",
      "q(21)=0;q(211)=0;q(2111)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(1)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0")
    checkResults(resultfile, expected: _*)
  }

  @Test def test1_4(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log2, "--resultfile", resultfile, "--prediction", "5")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "3",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(611111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(6)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0")
    checkResults(resultfile, expected: _*)
  }

  @Test def test1_5(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--prediction", "2", "--bits", "5")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "q(21)=0;q(211)=0",
      "q(21)=0;q(21)=0",
      "q(21)=0;q(1)=0",
      "q(1)=0;q(21)=0",
      "q(1)=0;q(1)=0",
      "q(1)=0;q(2)=0",
      "q(2)=0;q(21)=0",
      "q(2)=0;q(1)=0",
      "q(2)=0;q(2)=0"
    )
    checkResults(resultfile, expected: _*)
  }

  @Test def test1_6(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log2, "--resultfile", resultfile, "--prediction", "2", "--bits", "5")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "3",
      "q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0",
      "q(6)=0;q(6)=0",
      "q(6)=0;q(61)=0",
      "q(61)=0;q(2)=0",
      "q(61)=0;q(61)=0",
      "q(61)=0;q(611)=0")
    checkResults(resultfile, expected: _*)
  }

  @Test def test1_7(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log1, "--resultfile", resultfile, "--prediction", "4", "--bits", "5")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "q(21)=0;q(211)=0;q(2111)=0;q(21111)=0",
      "q(21)=0;q(211)=0;q(2111)=0;q(21)=0",
      "q(21)=0;q(211)=0;q(2111)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(211)=0;q(1)=0;q(1)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(211)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(21)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(2111)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(211)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(21)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(211)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(21)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(21)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(1)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(211)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(21)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(1)=0;q(2)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(21)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(1)=0",
      "q(1)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(2111)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(1)=0",
      "q(2)=0;q(21)=0;q(211)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(21)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(211)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(21)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(21)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(1)=0",
      "q(2)=0;q(1)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(211)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(21)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(1)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(21)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(1)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0")
    checkResults(resultfile, expected: _*)
  }

  @Test def test1_8(): Unit = {
    Verify("--execution", "0", "--specfile", spec1, "--logfile", log2, "--resultfile", resultfile, "--prediction", "5", "--bits", "5")
    // *=1 for success, *=0 for failure
    val expected = List[String](
      "1",
      "2",
      "3",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(611111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(61111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(6111)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(611)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(61)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(6)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(6)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(6)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(6)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(6)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(61111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(6111)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(611)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(61)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(2)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(4)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(6111)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(611)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(61)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(2)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(4)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(611)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(61)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(2)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(4)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(61)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(4)=0",
      "q(2)=0;q(2)=0;q(2)=0;q(2)=0;q(2)=0")
    checkResults(resultfile, expected: _*)
  }

}

